name: Build Flutter App

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build Binaries
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
    # Check out the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Install dependencies for Linux (and Windows, macOS when needed)
    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.3.0'

    # Install Ninja for Linux/macOS (for Ubuntu and macOS)
    - name: Install Ninja build tool (Linux/macOS)
      if: runner.os == 'Linux' 
      run: |
        sudo apt-get update
        sudo apt-get install -y ninja-build
        sudo apt-get install -y build-essential  # C++ Compiler on Linux
        flutter doctor

    # Install Ninja on Windows (via Chocolatey)
    - name: Install Ninja build tool (Windows)
      if: runner.os == 'Windows'
      run: |
        choco install ninja
        flutter doctor

    # Install Flutter dependencies
    - name: Install dependencies
      run: flutter pub get

    # Build binaries for each OS
    - name: Build for ${{ matrix.os }}
      run: |
        if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
          flutter build linux --release
        elif [ "${{ matrix.os }}" == "windows-latest" ]; then
          flutter build windows --release
        fi

    # Upload the build artifacts
    - name: Upload binaries
      uses: actions/upload-artifact@v3
      with:
        name: flutter-app-${{ matrix.os }}
        path: |
          build/linux/release/bundle/**    # For Linux
          build/windows/runner/Release/** # For Windows
